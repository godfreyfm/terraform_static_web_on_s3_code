name: Static website infrastructure deployment
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on:
  push:
    branches:
      - "main" #Focus on the main branch
  pull_request:
  workflow_dispatch:
    inputs:
      destroy:
        description: "Set to true to run terraform destroy"
        required: false
        default: "false"
jobs:
  terraform:
    name: "Terraform - Creating Resources"
    runs-on: ubuntu-latest #Runner. Severless
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
      - name: Checkout code/ Download code
        uses: actions/checkout@v4 #Download code into runner for further CICD operations
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"
      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY_}}
          aws-region: us-east-1
      - name: Runs Terraform init
        run: terraform init
      - name: Terraform validate
        run: terraform validate
      - name: Terraform plan
        run: |
          terraform plan -out=plan.out 2>&1 | tee plan.log
          echo "### Terraform Plan Output" >> $GITHUB_STEP_SUMMARY
          cat plan.log >> $GITHUB_STEP_SUMMARY

      - name: Upload Plan Log
        uses: actions/upload-artifact@v2
        with:
          name: plan-log
          path: plan.log

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: |
          echo "### Terraform - Creating Resources Output" >> $GITHUB_STEP_SUMMARY
          terraform apply -auto-approve plan.out 2>&1 | tee apply.log
          cat apply.log >> $GITHUB_STEP_SUMMARY

      - name: Upload Apply Log
        uses: actions/upload-artifact@v2
        with:
          name: apply-log
          path: apply.log

  terraform-destroy:
    name: "Terraform - Destroying Resources"
    runs-on: ubuntu-latest #Runner. Severless
    if: github.event.inputs.destroy == 'true'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.1.7"
      - name: Setup AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY_}}
          aws-region: us-east-1
      - name: Runs Terraform init
        run: terraform init
      - name: Terraform Destroy
        run: terraform destroy -auto-approve
      - name: Add Terraform Destroy to Summary
        if: always()
        run: |
          echo "### Terraform - Destroying Resources Output" >> $GITHUB_STEP_SUMMARY
          terraform destroy -auto-approve 2>&1 | tee destroy.log
          cat destroy.log >> $GITHUB_STEP_SUMMARY

      - name: Upload Destroy Log
        uses: actions/upload-artifact@v2
        with:
          name: destroy-log
          path: destroy.log
